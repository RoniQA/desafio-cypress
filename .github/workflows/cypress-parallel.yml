name: Cypress Parallel Tests

on:
  workflow_dispatch: # Apenas execução manual
  schedule:
    # Executa diariamente às 2h da manhã
    - cron: '0 2 * * *'

jobs:
  cypress-parallel:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # Executa testes em paralelo para maior velocidade
        containers: [1, 2, 3]
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install Dependencies
        run: npm ci
        
      - name: Cypress Cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/Cypress
          key: cypress-cache-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            cypress-cache-${{ runner.os }}-
            
      - name: Run Cypress Tests
        uses: cypress-io/github-action@v6
        with:
          browser: chrome
          record: false
          parallel: true
          group: 'Parallel Tests'
          spec: 'cypress/e2e/**/*.cy.js'
          config-file: cypress.config.ci.js
          
      - name: Upload Screenshots
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-screenshots-parallel-${{ matrix.containers }}-${{ github.run_id }}
          path: cypress/screenshots
          if-no-files-found: ignore
          
      - name: Upload Videos
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: cypress-videos-parallel-${{ matrix.containers }}-${{ github.run_id }}
          path: cypress/videos
          if-no-files-found: ignore
          
      - name: Generate Performance Report
        if: always()
        run: |
          echo "Parallel Performance Report - Container ${{ matrix.containers }}" > performance-report-parallel-${{ matrix.containers }}-${{ github.run_id }}.txt
          echo "Date: $(date)" >> performance-report-parallel-${{ matrix.containers }}-${{ github.run_id }}.txt
          echo "Branch: ${{ github.ref }}" >> performance-report-parallel-${{ matrix.containers }}-${{ github.run_id }}.txt
          echo "Commit: ${{ github.sha }}" >> performance-report-parallel-${{ matrix.containers }}-${{ github.run_id }}.txt
          echo "Workflow: ${{ github.workflow }}" >> performance-report-parallel-${{ matrix.containers }}-${{ github.run_id }}.txt
          echo "Container: ${{ matrix.containers }}" >> performance-report-parallel-${{ matrix.containers }}-${{ github.run_id }}.txt
          
      - name: Upload Performance Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: performance-report-parallel-${{ matrix.containers }}-${{ github.run_id }}
          path: performance-report-parallel-${{ matrix.containers }}-${{ github.run_id }}.txt
          if-no-files-found: ignore

  # Job para consolidar resultados paralelos
  consolidate-results:
    runs-on: ubuntu-latest
    needs: cypress-parallel
    if: always()
    
    steps:
      - name: Consolidate Results
        run: |
          echo "Parallel Test Results Consolidated" > consolidated-results-${{ github.run_id }}.txt
          echo "Date: $(date)" >> consolidated-results-${{ github.run_id }}.txt
          echo "All parallel containers completed!" >> consolidated-results-${{ github.run_id }}.txt
          
      - name: Upload Consolidated Results
        uses: actions/upload-artifact@v4
        with:
          name: consolidated-results-${{ github.run_id }}
          path: consolidated-results-${{ github.run_id }}.txt
          if-no-files-found: ignore
