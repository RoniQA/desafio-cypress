name: Cypress E2E Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch: # Permite execu√ß√£o manual

jobs:
  cypress-run:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install Dependencies
        run: npm ci
        
      - name: Cypress Cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/Cypress
          key: cypress-cache-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            cypress-cache-${{ runner.os }}-
            
      - name: Run Cypress Tests
        uses: cypress-io/github-action@v6
        with:
          browser: chrome
          record: false
          spec: 'cypress/e2e/**/*.cy.js'
          config-file: cypress.config.ci.js
          
      - name: Upload Screenshots
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-screenshots-${{ github.run_id }}
          path: cypress/screenshots
          if-no-files-found: ignore
          
      - name: Upload Videos
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: cypress-videos-${{ github.run_id }}
          path: cypress/videos
          if-no-files-found: ignore

      - name: Generate Detailed Reports
        if: always()
        run: |
          echo "üöÄ Gerando relat√≥rios detalhados..."
          
          # Cria diret√≥rio de relat√≥rios se n√£o existir
          mkdir -p cypress/reports
          
          # Gera relat√≥rio de performance detalhado
          echo "üìä Performance Report - $(date)" > performance-report-${{ github.run_id }}.txt
          echo "Branch: ${{ github.ref }}" >> performance-report-${{ github.run_id }}.txt
          echo "Commit: ${{ github.sha }}" >> performance-report-${{ github.run_id }}.txt
          echo "Workflow: ${{ github.workflow }}" >> performance-report-${{ github.run_id }}.txt
          echo "Status: ${{ job.status }}" >> performance-report-${{ github.run_id }}.txt
          echo "Duration: ${{ job.steps.*.duration }}" >> performance-report-${{ github.run_id }}.txt
          
          # Gera relat√≥rio HTML se os testes passaram
          if [ "${{ job.status }}" == "success" ]; then
            echo "‚úÖ Testes passaram - gerando relat√≥rio HTML..."
            node scripts/generate-report.js
          else
            echo "‚ùå Testes falharam - relat√≥rio HTML n√£o ser√° gerado"
          fi
          
      - name: Upload Performance Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: performance-report-${{ github.run_id }}
          path: performance-report-${{ github.run_id }}.txt
          if-no-files-found: ignore

  # Job adicional para testes de performance
  performance-tests:
    runs-on: ubuntu-latest
    needs: cypress-run
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install Dependencies
        run: npm ci
        
      - name: Run Performance Tests
        run: |
          npm run test:performance
          
      - name: Generate Performance Metrics
        run: |
          echo "Performance Metrics Report" > performance-metrics-${{ github.run_id }}.txt
          echo "Date: $(date)" >> performance-metrics-${{ github.run_id }}.txt
          echo "Branch: ${{ github.ref }}" >> performance-metrics-${{ github.run_id }}.txt
          echo "Performance tests completed successfully!" >> performance-metrics-${{ github.run_id }}.txt
          
      - name: Upload Performance Metrics
        uses: actions/upload-artifact@v4
        with:
          name: performance-metrics-${{ github.run_id }}
          path: performance-metrics-${{ github.run_id }}.txt
          if-no-files-found: ignore

  # Job para notifica√ß√µes
  notify:
    runs-on: ubuntu-latest
    needs: [cypress-run, performance-tests]
    if: always()
    
    steps:
      - name: Notify Success
        if: needs.cypress-run.result == 'success' && (needs.performance-tests.result == 'success' || needs.performance-tests.result == 'skipped')
        run: |
          echo "üéâ All tests passed successfully!"
          echo "‚úÖ Cypress tests: PASSED"
          echo "‚úÖ Performance tests: PASSED"
          
      - name: Notify Failure
        if: needs.cypress-run.result == 'failure' || needs.performance-tests.result == 'failure'
        run: |
          echo "‚ùå Some tests failed!"
          echo "Cypress tests: ${{ needs.cypress-run.result }}"
          echo "Performance tests: ${{ needs.performance-tests.result }}"
