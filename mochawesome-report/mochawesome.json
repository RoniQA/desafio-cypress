{
  "stats": {
    "suites": 1,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2025-08-29T19:36:00.314Z",
    "end": "2025-08-29T19:36:42.187Z",
    "duration": 41873,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "61b6d69b-5970-4db7-9062-395f13b67f66",
      "title": "",
      "fullFile": "cypress\\e2e\\performance-test.cy.js",
      "file": "cypress\\e2e\\performance-test.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "89e61851-c276-4a55-bc6f-0f76622b2289",
          "title": "Performance Tests - Amazon E-commerce",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve medir performance do fluxo completo com seletores otimizados",
              "fullTitle": "Performance Tests - Amazon E-commerce Deve medir performance do fluxo completo com seletores otimizados",
              "timedOut": null,
              "duration": 24549,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const startTime = performance.now();\nconst productToSearch = 'laptop';\ncy.log('üöÄ Iniciando teste de performance...');\n// 1. Busca por produto - com seletores otimizados\ncy.log('1. Fazendo busca por produto (otimizado)...');\ncy.searchProduct(productToSearch);\n// 2. Sele√ß√£o de produto - com seletores otimizados\ncy.log('2. Selecionando produto (otimizado)...');\ncy.selectFirstProductRobust();\n// 3. Adi√ß√£o ao carrinho - com seletores otimizados\ncy.log('3. Adicionando ao carrinho (otimizado)...');\ncy.addToCartRobust();\n// 4. Valida√ß√£o no carrinho - com seletores otimizados\ncy.log('4. Validando no carrinho (otimizado)...');\ncy.validateProductInCart(productToSearch);\n// Mede tempo total do fluxo\ncy.then(() => {\n  const endTime = performance.now();\n  const totalTime = endTime - startTime;\n  cy.log(`‚è±Ô∏è Tempo total do fluxo otimizado: ${totalTime.toFixed(2)}ms`);\n  // Compara com tempo esperado (benchmark)\n  const expectedTime = 30000; // 30 segundos\n  if (totalTime < expectedTime) {\n    cy.log(`‚úÖ Performance EXCELENTE! ${totalTime.toFixed(2)}ms < ${expectedTime}ms`);\n  } else if (totalTime < expectedTime * 1.2) {\n    cy.log(`üü° Performance BOA! ${totalTime.toFixed(2)}ms < ${(expectedTime * 1.2).toFixed(2)}ms`);\n  } else {\n    cy.log(`üî¥ Performance pode ser melhorada: ${totalTime.toFixed(2)}ms > ${expectedTime}ms`);\n  }\n});\ncy.log('‚úÖ Teste de performance conclu√≠do!');",
              "err": {},
              "uuid": "b3779423-ba5b-48ef-94a0-9cff56e1d40d",
              "parentUUID": "89e61851-c276-4a55-bc6f-0f76622b2289",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve medir tempo de carregamento de elementos individuais",
              "fullTitle": "Performance Tests - Amazon E-commerce Deve medir tempo de carregamento de elementos individuais",
              "timedOut": null,
              "duration": 1189,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.log('üîç Medindo performance de elementos individuais...');\n// Mede tempo de carregamento do campo de busca\ncy.measurePageLoadTime();\ncy.get('input[type=\"text\"], input[placeholder*=\"search\"], input[aria-label*=\"search\"], #twotabsearchtextbox').should('be.visible').first();\n// Mede tempo de carregamento do bot√£o de busca\ncy.get('input[type=\"submit\"], button[type=\"submit\"], #nav-search-submit-button, .nav-search-submit').should('be.visible').first();\n// Mede tempo de carregamento do carrinho\ncy.get('#nav-cart, .nav-cart, a[href*=\"/cart\"], [data-testid=\"cart\"]').should('be.visible').first();\ncy.log('‚úÖ Medi√ß√µes de elementos conclu√≠das!');",
              "err": {},
              "uuid": "fbf25b3b-1a6f-4861-b30a-d95cbece4cd6",
              "parentUUID": "89e61851-c276-4a55-bc6f-0f76622b2289",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve validar performance com diferentes produtos",
              "fullTitle": "Performance Tests - Amazon E-commerce Deve validar performance com diferentes produtos",
              "timedOut": null,
              "duration": 15830,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const products = ['book', 'phone', 'shoes'];\nproducts.forEach((product, index) => {\n  cy.log(`üì± Testando performance com produto ${index + 1}: ${product}`);\n  const startTime = performance.now();\n  // Busca r√°pida\n  cy.searchProduct(product);\n  // Valida√ß√£o r√°pida\n  cy.get('a[href*=\"/dp/\"]').should('have.length.greaterThan', 0);\n  cy.then(() => {\n    const endTime = performance.now();\n    const searchTime = endTime - startTime;\n    cy.log(`‚è±Ô∏è Tempo de busca para \"${product}\": ${searchTime.toFixed(2)}ms`);\n  });\n});\ncy.log('‚úÖ Testes de performance com diferentes produtos conclu√≠dos!');",
              "err": {},
              "uuid": "7c67eac3-bed8-4991-8fce-b7c020ec7c80",
              "parentUUID": "89e61851-c276-4a55-bc6f-0f76622b2289",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b3779423-ba5b-48ef-94a0-9cff56e1d40d",
            "fbf25b3b-1a6f-4861-b30a-d95cbece4cd6",
            "7c67eac3-bed8-4991-8fce-b7c020ec7c80"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 41568,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "overwrite": true,
        "html": true,
        "json": true,
        "reportDir": "mochawesome-report",
        "reportFilename": "mochawesome"
      },
      "version": "6.2.0"
    }
  }
}